// Code generated by openapi-generator-go DO NOT EDIT.
//
// Source:
//
//	Title: Trusty API
//	Version: v2
package api

import (
	validation "github.com/go-ozzo/ozzo-validation/v4"
)

// ProvenanceResponse is an object.
type ProvenanceResponse struct {
	// Hp: [Historical provenance](provenance.md#historical-provenance-hp)
	// This contains the number of `tags` in the repo, the number of `versions`
	// of the package, a count of the `common` tags and the ratio of tags to common
	// as `overlap`.
	Hp *HistoricalProvenance `json:"hp,omitempty" mapstructure:"hp,omitempty"`
	// Score:
	Score float32 `json:"score,omitempty" mapstructure:"score,omitempty"`
	// Sigstore:
	Sigstore interface{} `json:"sigstore,omitempty" mapstructure:"sigstore,omitempty"`
	// Status:
	Status string `json:"status,omitempty" mapstructure:"status,omitempty"`
}

// Validate implements basic validation for this model
func (m ProvenanceResponse) Validate() error {
	return validation.Errors{
		"hp": validation.Validate(
			m.Hp,
		),
	}.Filter()
}

// GetHp returns the Hp property
func (m ProvenanceResponse) GetHp() *HistoricalProvenance {
	return m.Hp
}

// SetHp sets the Hp property
func (m *ProvenanceResponse) SetHp(val *HistoricalProvenance) {
	m.Hp = val
}

// GetScore returns the Score property
func (m ProvenanceResponse) GetScore() float32 {
	return m.Score
}

// SetScore sets the Score property
func (m *ProvenanceResponse) SetScore(val float32) {
	m.Score = val
}

// GetSigstore returns the Sigstore property
func (m ProvenanceResponse) GetSigstore() interface{} {
	return m.Sigstore
}

// SetSigstore sets the Sigstore property
func (m *ProvenanceResponse) SetSigstore(val interface{}) {
	m.Sigstore = val
}

// GetStatus returns the Status property
func (m ProvenanceResponse) GetStatus() string {
	return m.Status
}

// SetStatus sets the Status property
func (m *ProvenanceResponse) SetStatus(val string) {
	m.Status = val
}
