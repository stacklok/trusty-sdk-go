// Code generated by openapi-generator-go DO NOT EDIT.
//
// Source:
//
//	Title: Trusty API
//	Version: v2
package api

import (
	validation "github.com/go-ozzo/ozzo-validation/v4"
)

// ProvenanceData is an object.
type ProvenanceData struct {
	// Issuer:
	Issuer string `json:"issuer,omitempty" mapstructure:"issuer,omitempty"`
	// SourceRepo:
	SourceRepo string `json:"source_repo,omitempty" mapstructure:"source_repo,omitempty"`
	// TokenIssuer:
	TokenIssuer string `json:"token_issuer,omitempty" mapstructure:"token_issuer,omitempty"`
	// Transparency:
	Transparency string `json:"transparency,omitempty" mapstructure:"transparency,omitempty"`
	// Workflow:
	Workflow string `json:"workflow,omitempty" mapstructure:"workflow,omitempty"`
}

// Validate implements basic validation for this model
func (m ProvenanceData) Validate() error {
	return validation.Errors{}.Filter()
}

// GetIssuer returns the Issuer property
func (m ProvenanceData) GetIssuer() string {
	return m.Issuer
}

// SetIssuer sets the Issuer property
func (m *ProvenanceData) SetIssuer(val string) {
	m.Issuer = val
}

// GetSourceRepo returns the SourceRepo property
func (m ProvenanceData) GetSourceRepo() string {
	return m.SourceRepo
}

// SetSourceRepo sets the SourceRepo property
func (m *ProvenanceData) SetSourceRepo(val string) {
	m.SourceRepo = val
}

// GetTokenIssuer returns the TokenIssuer property
func (m ProvenanceData) GetTokenIssuer() string {
	return m.TokenIssuer
}

// SetTokenIssuer sets the TokenIssuer property
func (m *ProvenanceData) SetTokenIssuer(val string) {
	m.TokenIssuer = val
}

// GetTransparency returns the Transparency property
func (m ProvenanceData) GetTransparency() string {
	return m.Transparency
}

// SetTransparency sets the Transparency property
func (m *ProvenanceData) SetTransparency(val string) {
	m.Transparency = val
}

// GetWorkflow returns the Workflow property
func (m ProvenanceData) GetWorkflow() string {
	return m.Workflow
}

// SetWorkflow sets the Workflow property
func (m *ProvenanceData) SetWorkflow(val string) {
	m.Workflow = val
}
