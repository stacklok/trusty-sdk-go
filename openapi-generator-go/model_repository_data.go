// Code generated by openapi-generator-go DO NOT EDIT.
//
// Source:
//
//	Title: Trusty API
//	Version: v2
package api

import (
	validation "github.com/go-ozzo/ozzo-validation/v4"
	"github.com/go-ozzo/ozzo-validation/v4/is"
)

// RepositoryData is an object.
type RepositoryData struct {
	// ContributorCount:
	ContributorCount interface{} `json:"contributor_count,omitempty" mapstructure:"contributor_count,omitempty"`
	// ForksCount:
	ForksCount interface{} `json:"forks_count,omitempty" mapstructure:"forks_count,omitempty"`
	// Id:
	Id string `json:"id" mapstructure:"id"`
	// LastUpdate:
	LastUpdate interface{} `json:"last_update,omitempty" mapstructure:"last_update,omitempty"`
	// Name:
	Name interface{} `json:"name,omitempty" mapstructure:"name,omitempty"`
	// OpenIssuesCount:
	OpenIssuesCount interface{} `json:"open_issues_count,omitempty" mapstructure:"open_issues_count,omitempty"`
	// Scores:
	Scores interface{} `json:"scores,omitempty" mapstructure:"scores,omitempty"`
	// StargazersCount:
	StargazersCount interface{} `json:"stargazers_count,omitempty" mapstructure:"stargazers_count,omitempty"`
	// Url:
	Url interface{} `json:"url,omitempty" mapstructure:"url,omitempty"`
	// WatchersCount:
	WatchersCount interface{} `json:"watchers_count,omitempty" mapstructure:"watchers_count,omitempty"`
}

// Validate implements basic validation for this model
func (m RepositoryData) Validate() error {
	return validation.Errors{
		"id": validation.Validate(
			m.Id, validation.Required, is.UUID,
		),
	}.Filter()
}

// GetContributorCount returns the ContributorCount property
func (m RepositoryData) GetContributorCount() interface{} {
	return m.ContributorCount
}

// SetContributorCount sets the ContributorCount property
func (m *RepositoryData) SetContributorCount(val interface{}) {
	m.ContributorCount = val
}

// GetForksCount returns the ForksCount property
func (m RepositoryData) GetForksCount() interface{} {
	return m.ForksCount
}

// SetForksCount sets the ForksCount property
func (m *RepositoryData) SetForksCount(val interface{}) {
	m.ForksCount = val
}

// GetId returns the Id property
func (m RepositoryData) GetId() string {
	return m.Id
}

// SetId sets the Id property
func (m *RepositoryData) SetId(val string) {
	m.Id = val
}

// GetLastUpdate returns the LastUpdate property
func (m RepositoryData) GetLastUpdate() interface{} {
	return m.LastUpdate
}

// SetLastUpdate sets the LastUpdate property
func (m *RepositoryData) SetLastUpdate(val interface{}) {
	m.LastUpdate = val
}

// GetName returns the Name property
func (m RepositoryData) GetName() interface{} {
	return m.Name
}

// SetName sets the Name property
func (m *RepositoryData) SetName(val interface{}) {
	m.Name = val
}

// GetOpenIssuesCount returns the OpenIssuesCount property
func (m RepositoryData) GetOpenIssuesCount() interface{} {
	return m.OpenIssuesCount
}

// SetOpenIssuesCount sets the OpenIssuesCount property
func (m *RepositoryData) SetOpenIssuesCount(val interface{}) {
	m.OpenIssuesCount = val
}

// GetScores returns the Scores property
func (m RepositoryData) GetScores() interface{} {
	return m.Scores
}

// SetScores sets the Scores property
func (m *RepositoryData) SetScores(val interface{}) {
	m.Scores = val
}

// GetStargazersCount returns the StargazersCount property
func (m RepositoryData) GetStargazersCount() interface{} {
	return m.StargazersCount
}

// SetStargazersCount sets the StargazersCount property
func (m *RepositoryData) SetStargazersCount(val interface{}) {
	m.StargazersCount = val
}

// GetUrl returns the Url property
func (m RepositoryData) GetUrl() interface{} {
	return m.Url
}

// SetUrl sets the Url property
func (m *RepositoryData) SetUrl(val interface{}) {
	m.Url = val
}

// GetWatchersCount returns the WatchersCount property
func (m RepositoryData) GetWatchersCount() interface{} {
	return m.WatchersCount
}

// SetWatchersCount sets the WatchersCount property
func (m *RepositoryData) SetWatchersCount(val interface{}) {
	m.WatchersCount = val
}
