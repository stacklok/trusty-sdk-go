/*
Trusty API

Trusty API

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VulnerabilityScores type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityScores{}

// VulnerabilityScores struct for VulnerabilityScores
type VulnerabilityScores struct {
	OsvIdentifier string `json:"osv_identifier"`
	Summary string `json:"summary"`
	Severity []VulnerabilitySeverity `json:"severity"`
}

type _VulnerabilityScores VulnerabilityScores

// NewVulnerabilityScores instantiates a new VulnerabilityScores object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityScores(osvIdentifier string, summary string, severity []VulnerabilitySeverity) *VulnerabilityScores {
	this := VulnerabilityScores{}
	this.OsvIdentifier = osvIdentifier
	this.Summary = summary
	this.Severity = severity
	return &this
}

// NewVulnerabilityScoresWithDefaults instantiates a new VulnerabilityScores object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityScoresWithDefaults() *VulnerabilityScores {
	this := VulnerabilityScores{}
	return &this
}

// GetOsvIdentifier returns the OsvIdentifier field value
func (o *VulnerabilityScores) GetOsvIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsvIdentifier
}

// GetOsvIdentifierOk returns a tuple with the OsvIdentifier field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScores) GetOsvIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsvIdentifier, true
}

// SetOsvIdentifier sets field value
func (o *VulnerabilityScores) SetOsvIdentifier(v string) {
	o.OsvIdentifier = v
}

// GetSummary returns the Summary field value
func (o *VulnerabilityScores) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScores) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *VulnerabilityScores) SetSummary(v string) {
	o.Summary = v
}

// GetSeverity returns the Severity field value
func (o *VulnerabilityScores) GetSeverity() []VulnerabilitySeverity {
	if o == nil {
		var ret []VulnerabilitySeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityScores) GetSeverityOk() ([]VulnerabilitySeverity, bool) {
	if o == nil {
		return nil, false
	}
	return o.Severity, true
}

// SetSeverity sets field value
func (o *VulnerabilityScores) SetSeverity(v []VulnerabilitySeverity) {
	o.Severity = v
}

func (o VulnerabilityScores) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityScores) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["osv_identifier"] = o.OsvIdentifier
	toSerialize["summary"] = o.Summary
	toSerialize["severity"] = o.Severity
	return toSerialize, nil
}

func (o *VulnerabilityScores) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"osv_identifier",
		"summary",
		"severity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVulnerabilityScores := _VulnerabilityScores{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVulnerabilityScores)

	if err != nil {
		return err
	}

	*o = VulnerabilityScores(varVulnerabilityScores)

	return err
}

type NullableVulnerabilityScores struct {
	value *VulnerabilityScores
	isSet bool
}

func (v NullableVulnerabilityScores) Get() *VulnerabilityScores {
	return v.value
}

func (v *NullableVulnerabilityScores) Set(val *VulnerabilityScores) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityScores) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityScores) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityScores(val *VulnerabilityScores) *NullableVulnerabilityScores {
	return &NullableVulnerabilityScores{value: val, isSet: true}
}

func (v NullableVulnerabilityScores) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityScores) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


