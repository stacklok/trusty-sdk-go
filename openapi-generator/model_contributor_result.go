/*
Trusty API

Trusty API

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ContributorResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContributorResult{}

// ContributorResult struct for ContributorResult
type ContributorResult struct {
	ContributorData *PackageContributorData `json:"contributor_data,omitempty"`
	ContributorRepos []RepositoryData `json:"contributor_repos,omitempty"`
}

// NewContributorResult instantiates a new ContributorResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContributorResult() *ContributorResult {
	this := ContributorResult{}
	return &this
}

// NewContributorResultWithDefaults instantiates a new ContributorResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContributorResultWithDefaults() *ContributorResult {
	this := ContributorResult{}
	return &this
}

// GetContributorData returns the ContributorData field value if set, zero value otherwise.
func (o *ContributorResult) GetContributorData() PackageContributorData {
	if o == nil || IsNil(o.ContributorData) {
		var ret PackageContributorData
		return ret
	}
	return *o.ContributorData
}

// GetContributorDataOk returns a tuple with the ContributorData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorResult) GetContributorDataOk() (*PackageContributorData, bool) {
	if o == nil || IsNil(o.ContributorData) {
		return nil, false
	}
	return o.ContributorData, true
}

// HasContributorData returns a boolean if a field has been set.
func (o *ContributorResult) HasContributorData() bool {
	if o != nil && !IsNil(o.ContributorData) {
		return true
	}

	return false
}

// SetContributorData gets a reference to the given PackageContributorData and assigns it to the ContributorData field.
func (o *ContributorResult) SetContributorData(v PackageContributorData) {
	o.ContributorData = &v
}

// GetContributorRepos returns the ContributorRepos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContributorResult) GetContributorRepos() []RepositoryData {
	if o == nil {
		var ret []RepositoryData
		return ret
	}
	return o.ContributorRepos
}

// GetContributorReposOk returns a tuple with the ContributorRepos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContributorResult) GetContributorReposOk() ([]RepositoryData, bool) {
	if o == nil || IsNil(o.ContributorRepos) {
		return nil, false
	}
	return o.ContributorRepos, true
}

// HasContributorRepos returns a boolean if a field has been set.
func (o *ContributorResult) HasContributorRepos() bool {
	if o != nil && !IsNil(o.ContributorRepos) {
		return true
	}

	return false
}

// SetContributorRepos gets a reference to the given []RepositoryData and assigns it to the ContributorRepos field.
func (o *ContributorResult) SetContributorRepos(v []RepositoryData) {
	o.ContributorRepos = v
}

func (o ContributorResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContributorResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContributorData) {
		toSerialize["contributor_data"] = o.ContributorData
	}
	if o.ContributorRepos != nil {
		toSerialize["contributor_repos"] = o.ContributorRepos
	}
	return toSerialize, nil
}

type NullableContributorResult struct {
	value *ContributorResult
	isSet bool
}

func (v NullableContributorResult) Get() *ContributorResult {
	return v.value
}

func (v *NullableContributorResult) Set(val *ContributorResult) {
	v.value = val
	v.isSet = true
}

func (v NullableContributorResult) IsSet() bool {
	return v.isSet
}

func (v *NullableContributorResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContributorResult(val *ContributorResult) *NullableContributorResult {
	return &NullableContributorResult{value: val, isSet: true}
}

func (v NullableContributorResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContributorResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


