/*
Trusty API

Trusty API

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PackageSimilarResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageSimilarResult{}

// PackageSimilarResult struct for PackageSimilarResult
type PackageSimilarResult struct {
	SimilarPackageNames []PackageBasicInfo `json:"similar_package_names"`
}

type _PackageSimilarResult PackageSimilarResult

// NewPackageSimilarResult instantiates a new PackageSimilarResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageSimilarResult(similarPackageNames []PackageBasicInfo) *PackageSimilarResult {
	this := PackageSimilarResult{}
	this.SimilarPackageNames = similarPackageNames
	return &this
}

// NewPackageSimilarResultWithDefaults instantiates a new PackageSimilarResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageSimilarResultWithDefaults() *PackageSimilarResult {
	this := PackageSimilarResult{}
	return &this
}

// GetSimilarPackageNames returns the SimilarPackageNames field value
// If the value is explicit nil, the zero value for []PackageBasicInfo will be returned
func (o *PackageSimilarResult) GetSimilarPackageNames() []PackageBasicInfo {
	if o == nil {
		var ret []PackageBasicInfo
		return ret
	}

	return o.SimilarPackageNames
}

// GetSimilarPackageNamesOk returns a tuple with the SimilarPackageNames field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageSimilarResult) GetSimilarPackageNamesOk() ([]PackageBasicInfo, bool) {
	if o == nil || IsNil(o.SimilarPackageNames) {
		return nil, false
	}
	return o.SimilarPackageNames, true
}

// SetSimilarPackageNames sets field value
func (o *PackageSimilarResult) SetSimilarPackageNames(v []PackageBasicInfo) {
	o.SimilarPackageNames = v
}

func (o PackageSimilarResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageSimilarResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SimilarPackageNames != nil {
		toSerialize["similar_package_names"] = o.SimilarPackageNames
	}
	return toSerialize, nil
}

func (o *PackageSimilarResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"similar_package_names",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPackageSimilarResult := _PackageSimilarResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPackageSimilarResult)

	if err != nil {
		return err
	}

	*o = PackageSimilarResult(varPackageSimilarResult)

	return err
}

type NullablePackageSimilarResult struct {
	value *PackageSimilarResult
	isSet bool
}

func (v NullablePackageSimilarResult) Get() *PackageSimilarResult {
	return v.value
}

func (v *NullablePackageSimilarResult) Set(val *PackageSimilarResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageSimilarResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageSimilarResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageSimilarResult(val *PackageSimilarResult) *NullablePackageSimilarResult {
	return &NullablePackageSimilarResult{value: val, isSet: true}
}

func (v NullablePackageSimilarResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageSimilarResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


