/*
Trusty API

Trusty API

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PackageMaliciousPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageMaliciousPayload{}

// PackageMaliciousPayload This represents the payload details for a malicious package.
type PackageMaliciousPayload struct {
	Summary string `json:"summary"`
	Details NullableString `json:"details,omitempty"`
	Published NullableTime `json:"published,omitempty"`
	Modified NullableTime `json:"modified,omitempty"`
	Source NullableString `json:"source,omitempty"`
}

type _PackageMaliciousPayload PackageMaliciousPayload

// NewPackageMaliciousPayload instantiates a new PackageMaliciousPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageMaliciousPayload(summary string) *PackageMaliciousPayload {
	this := PackageMaliciousPayload{}
	this.Summary = summary
	return &this
}

// NewPackageMaliciousPayloadWithDefaults instantiates a new PackageMaliciousPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageMaliciousPayloadWithDefaults() *PackageMaliciousPayload {
	this := PackageMaliciousPayload{}
	return &this
}

// GetSummary returns the Summary field value
func (o *PackageMaliciousPayload) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *PackageMaliciousPayload) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *PackageMaliciousPayload) SetSummary(v string) {
	o.Summary = v
}

// GetDetails returns the Details field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageMaliciousPayload) GetDetails() string {
	if o == nil || IsNil(o.Details.Get()) {
		var ret string
		return ret
	}
	return *o.Details.Get()
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageMaliciousPayload) GetDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Details.Get(), o.Details.IsSet()
}

// HasDetails returns a boolean if a field has been set.
func (o *PackageMaliciousPayload) HasDetails() bool {
	if o != nil && o.Details.IsSet() {
		return true
	}

	return false
}

// SetDetails gets a reference to the given NullableString and assigns it to the Details field.
func (o *PackageMaliciousPayload) SetDetails(v string) {
	o.Details.Set(&v)
}
// SetDetailsNil sets the value for Details to be an explicit nil
func (o *PackageMaliciousPayload) SetDetailsNil() {
	o.Details.Set(nil)
}

// UnsetDetails ensures that no value is present for Details, not even an explicit nil
func (o *PackageMaliciousPayload) UnsetDetails() {
	o.Details.Unset()
}

// GetPublished returns the Published field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageMaliciousPayload) GetPublished() time.Time {
	if o == nil || IsNil(o.Published.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Published.Get()
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageMaliciousPayload) GetPublishedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Published.Get(), o.Published.IsSet()
}

// HasPublished returns a boolean if a field has been set.
func (o *PackageMaliciousPayload) HasPublished() bool {
	if o != nil && o.Published.IsSet() {
		return true
	}

	return false
}

// SetPublished gets a reference to the given NullableTime and assigns it to the Published field.
func (o *PackageMaliciousPayload) SetPublished(v time.Time) {
	o.Published.Set(&v)
}
// SetPublishedNil sets the value for Published to be an explicit nil
func (o *PackageMaliciousPayload) SetPublishedNil() {
	o.Published.Set(nil)
}

// UnsetPublished ensures that no value is present for Published, not even an explicit nil
func (o *PackageMaliciousPayload) UnsetPublished() {
	o.Published.Unset()
}

// GetModified returns the Modified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageMaliciousPayload) GetModified() time.Time {
	if o == nil || IsNil(o.Modified.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Modified.Get()
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageMaliciousPayload) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Modified.Get(), o.Modified.IsSet()
}

// HasModified returns a boolean if a field has been set.
func (o *PackageMaliciousPayload) HasModified() bool {
	if o != nil && o.Modified.IsSet() {
		return true
	}

	return false
}

// SetModified gets a reference to the given NullableTime and assigns it to the Modified field.
func (o *PackageMaliciousPayload) SetModified(v time.Time) {
	o.Modified.Set(&v)
}
// SetModifiedNil sets the value for Modified to be an explicit nil
func (o *PackageMaliciousPayload) SetModifiedNil() {
	o.Modified.Set(nil)
}

// UnsetModified ensures that no value is present for Modified, not even an explicit nil
func (o *PackageMaliciousPayload) UnsetModified() {
	o.Modified.Unset()
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageMaliciousPayload) GetSource() string {
	if o == nil || IsNil(o.Source.Get()) {
		var ret string
		return ret
	}
	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageMaliciousPayload) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// HasSource returns a boolean if a field has been set.
func (o *PackageMaliciousPayload) HasSource() bool {
	if o != nil && o.Source.IsSet() {
		return true
	}

	return false
}

// SetSource gets a reference to the given NullableString and assigns it to the Source field.
func (o *PackageMaliciousPayload) SetSource(v string) {
	o.Source.Set(&v)
}
// SetSourceNil sets the value for Source to be an explicit nil
func (o *PackageMaliciousPayload) SetSourceNil() {
	o.Source.Set(nil)
}

// UnsetSource ensures that no value is present for Source, not even an explicit nil
func (o *PackageMaliciousPayload) UnsetSource() {
	o.Source.Unset()
}

func (o PackageMaliciousPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageMaliciousPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["summary"] = o.Summary
	if o.Details.IsSet() {
		toSerialize["details"] = o.Details.Get()
	}
	if o.Published.IsSet() {
		toSerialize["published"] = o.Published.Get()
	}
	if o.Modified.IsSet() {
		toSerialize["modified"] = o.Modified.Get()
	}
	if o.Source.IsSet() {
		toSerialize["source"] = o.Source.Get()
	}
	return toSerialize, nil
}

func (o *PackageMaliciousPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"summary",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPackageMaliciousPayload := _PackageMaliciousPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPackageMaliciousPayload)

	if err != nil {
		return err
	}

	*o = PackageMaliciousPayload(varPackageMaliciousPayload)

	return err
}

type NullablePackageMaliciousPayload struct {
	value *PackageMaliciousPayload
	isSet bool
}

func (v NullablePackageMaliciousPayload) Get() *PackageMaliciousPayload {
	return v.value
}

func (v *NullablePackageMaliciousPayload) Set(val *PackageMaliciousPayload) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageMaliciousPayload) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageMaliciousPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageMaliciousPayload(val *PackageMaliciousPayload) *NullablePackageMaliciousPayload {
	return &NullablePackageMaliciousPayload{value: val, isSet: true}
}

func (v NullablePackageMaliciousPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageMaliciousPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


