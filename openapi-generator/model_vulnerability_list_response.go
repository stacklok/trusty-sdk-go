/*
Trusty API

Trusty API

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VulnerabilityListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityListResponse{}

// VulnerabilityListResponse struct for VulnerabilityListResponse
type VulnerabilityListResponse struct {
	Vulnerabilities []VulnerabilityScores `json:"vulnerabilities"`
	NextToken NullableString `json:"next_token,omitempty"`
}

type _VulnerabilityListResponse VulnerabilityListResponse

// NewVulnerabilityListResponse instantiates a new VulnerabilityListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityListResponse(vulnerabilities []VulnerabilityScores) *VulnerabilityListResponse {
	this := VulnerabilityListResponse{}
	this.Vulnerabilities = vulnerabilities
	return &this
}

// NewVulnerabilityListResponseWithDefaults instantiates a new VulnerabilityListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityListResponseWithDefaults() *VulnerabilityListResponse {
	this := VulnerabilityListResponse{}
	return &this
}

// GetVulnerabilities returns the Vulnerabilities field value
func (o *VulnerabilityListResponse) GetVulnerabilities() []VulnerabilityScores {
	if o == nil {
		var ret []VulnerabilityScores
		return ret
	}

	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityListResponse) GetVulnerabilitiesOk() ([]VulnerabilityScores, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// SetVulnerabilities sets field value
func (o *VulnerabilityListResponse) SetVulnerabilities(v []VulnerabilityScores) {
	o.Vulnerabilities = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VulnerabilityListResponse) GetNextToken() string {
	if o == nil || IsNil(o.NextToken.Get()) {
		var ret string
		return ret
	}
	return *o.NextToken.Get()
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VulnerabilityListResponse) GetNextTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextToken.Get(), o.NextToken.IsSet()
}

// HasNextToken returns a boolean if a field has been set.
func (o *VulnerabilityListResponse) HasNextToken() bool {
	if o != nil && o.NextToken.IsSet() {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given NullableString and assigns it to the NextToken field.
func (o *VulnerabilityListResponse) SetNextToken(v string) {
	o.NextToken.Set(&v)
}
// SetNextTokenNil sets the value for NextToken to be an explicit nil
func (o *VulnerabilityListResponse) SetNextTokenNil() {
	o.NextToken.Set(nil)
}

// UnsetNextToken ensures that no value is present for NextToken, not even an explicit nil
func (o *VulnerabilityListResponse) UnsetNextToken() {
	o.NextToken.Unset()
}

func (o VulnerabilityListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vulnerabilities"] = o.Vulnerabilities
	if o.NextToken.IsSet() {
		toSerialize["next_token"] = o.NextToken.Get()
	}
	return toSerialize, nil
}

func (o *VulnerabilityListResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vulnerabilities",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVulnerabilityListResponse := _VulnerabilityListResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVulnerabilityListResponse)

	if err != nil {
		return err
	}

	*o = VulnerabilityListResponse(varVulnerabilityListResponse)

	return err
}

type NullableVulnerabilityListResponse struct {
	value *VulnerabilityListResponse
	isSet bool
}

func (v NullableVulnerabilityListResponse) Get() *VulnerabilityListResponse {
	return v.value
}

func (v *NullableVulnerabilityListResponse) Set(val *VulnerabilityListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityListResponse(val *VulnerabilityListResponse) *NullableVulnerabilityListResponse {
	return &NullableVulnerabilityListResponse{value: val, isSet: true}
}

func (v NullableVulnerabilityListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


