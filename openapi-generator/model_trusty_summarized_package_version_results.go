/*
Trusty API

Trusty API

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TrustySummarizedPackageVersionResults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrustySummarizedPackageVersionResults{}

// TrustySummarizedPackageVersionResults struct for TrustySummarizedPackageVersionResults
type TrustySummarizedPackageVersionResults struct {
	Results []TrustySummarizedPackageVersion `json:"results"`
	NextToken NullableTime `json:"next_token,omitempty"`
	Latest NullableTrustySummarizedPackageVersion `json:"latest,omitempty"`
}

type _TrustySummarizedPackageVersionResults TrustySummarizedPackageVersionResults

// NewTrustySummarizedPackageVersionResults instantiates a new TrustySummarizedPackageVersionResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrustySummarizedPackageVersionResults(results []TrustySummarizedPackageVersion) *TrustySummarizedPackageVersionResults {
	this := TrustySummarizedPackageVersionResults{}
	this.Results = results
	return &this
}

// NewTrustySummarizedPackageVersionResultsWithDefaults instantiates a new TrustySummarizedPackageVersionResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrustySummarizedPackageVersionResultsWithDefaults() *TrustySummarizedPackageVersionResults {
	this := TrustySummarizedPackageVersionResults{}
	return &this
}

// GetResults returns the Results field value
func (o *TrustySummarizedPackageVersionResults) GetResults() []TrustySummarizedPackageVersion {
	if o == nil {
		var ret []TrustySummarizedPackageVersion
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *TrustySummarizedPackageVersionResults) GetResultsOk() ([]TrustySummarizedPackageVersion, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *TrustySummarizedPackageVersionResults) SetResults(v []TrustySummarizedPackageVersion) {
	o.Results = v
}

// GetNextToken returns the NextToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrustySummarizedPackageVersionResults) GetNextToken() time.Time {
	if o == nil || IsNil(o.NextToken.Get()) {
		var ret time.Time
		return ret
	}
	return *o.NextToken.Get()
}

// GetNextTokenOk returns a tuple with the NextToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrustySummarizedPackageVersionResults) GetNextTokenOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextToken.Get(), o.NextToken.IsSet()
}

// HasNextToken returns a boolean if a field has been set.
func (o *TrustySummarizedPackageVersionResults) HasNextToken() bool {
	if o != nil && o.NextToken.IsSet() {
		return true
	}

	return false
}

// SetNextToken gets a reference to the given NullableTime and assigns it to the NextToken field.
func (o *TrustySummarizedPackageVersionResults) SetNextToken(v time.Time) {
	o.NextToken.Set(&v)
}
// SetNextTokenNil sets the value for NextToken to be an explicit nil
func (o *TrustySummarizedPackageVersionResults) SetNextTokenNil() {
	o.NextToken.Set(nil)
}

// UnsetNextToken ensures that no value is present for NextToken, not even an explicit nil
func (o *TrustySummarizedPackageVersionResults) UnsetNextToken() {
	o.NextToken.Unset()
}

// GetLatest returns the Latest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrustySummarizedPackageVersionResults) GetLatest() TrustySummarizedPackageVersion {
	if o == nil || IsNil(o.Latest.Get()) {
		var ret TrustySummarizedPackageVersion
		return ret
	}
	return *o.Latest.Get()
}

// GetLatestOk returns a tuple with the Latest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrustySummarizedPackageVersionResults) GetLatestOk() (*TrustySummarizedPackageVersion, bool) {
	if o == nil {
		return nil, false
	}
	return o.Latest.Get(), o.Latest.IsSet()
}

// HasLatest returns a boolean if a field has been set.
func (o *TrustySummarizedPackageVersionResults) HasLatest() bool {
	if o != nil && o.Latest.IsSet() {
		return true
	}

	return false
}

// SetLatest gets a reference to the given NullableTrustySummarizedPackageVersion and assigns it to the Latest field.
func (o *TrustySummarizedPackageVersionResults) SetLatest(v TrustySummarizedPackageVersion) {
	o.Latest.Set(&v)
}
// SetLatestNil sets the value for Latest to be an explicit nil
func (o *TrustySummarizedPackageVersionResults) SetLatestNil() {
	o.Latest.Set(nil)
}

// UnsetLatest ensures that no value is present for Latest, not even an explicit nil
func (o *TrustySummarizedPackageVersionResults) UnsetLatest() {
	o.Latest.Unset()
}

func (o TrustySummarizedPackageVersionResults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrustySummarizedPackageVersionResults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["results"] = o.Results
	if o.NextToken.IsSet() {
		toSerialize["next_token"] = o.NextToken.Get()
	}
	if o.Latest.IsSet() {
		toSerialize["latest"] = o.Latest.Get()
	}
	return toSerialize, nil
}

func (o *TrustySummarizedPackageVersionResults) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"results",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTrustySummarizedPackageVersionResults := _TrustySummarizedPackageVersionResults{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTrustySummarizedPackageVersionResults)

	if err != nil {
		return err
	}

	*o = TrustySummarizedPackageVersionResults(varTrustySummarizedPackageVersionResults)

	return err
}

type NullableTrustySummarizedPackageVersionResults struct {
	value *TrustySummarizedPackageVersionResults
	isSet bool
}

func (v NullableTrustySummarizedPackageVersionResults) Get() *TrustySummarizedPackageVersionResults {
	return v.value
}

func (v *NullableTrustySummarizedPackageVersionResults) Set(val *TrustySummarizedPackageVersionResults) {
	v.value = val
	v.isSet = true
}

func (v NullableTrustySummarizedPackageVersionResults) IsSet() bool {
	return v.isSet
}

func (v *NullableTrustySummarizedPackageVersionResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrustySummarizedPackageVersionResults(val *TrustySummarizedPackageVersionResults) *NullableTrustySummarizedPackageVersionResults {
	return &NullableTrustySummarizedPackageVersionResults{value: val, isSet: true}
}

func (v NullableTrustySummarizedPackageVersionResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrustySummarizedPackageVersionResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


