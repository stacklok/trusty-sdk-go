/*
Trusty API

Trusty API

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PackageContributorData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PackageContributorData{}

// PackageContributorData struct for PackageContributorData
type PackageContributorData struct {
	Id string `json:"id"`
	Author NullableString `json:"author,omitempty"`
	AuthorEmail NullableString `json:"author_email,omitempty"`
	Login NullableString `json:"login,omitempty"`
	AvatarUrl NullableString `json:"avatar_url,omitempty"`
	GravatarId NullableString `json:"gravatar_id,omitempty"`
	Url NullableString `json:"url,omitempty"`
	HtmlUrl NullableString `json:"html_url,omitempty"`
	Company NullableString `json:"company,omitempty"`
	Blog NullableString `json:"blog,omitempty"`
	Location NullableString `json:"location,omitempty"`
	Email NullableString `json:"email,omitempty"`
	Hireable NullableBool `json:"hireable,omitempty"`
	TwitterUsername NullableString `json:"twitter_username,omitempty"`
	PublicRepos NullableInt32 `json:"public_repos,omitempty"`
	PublicGists NullableInt32 `json:"public_gists,omitempty"`
	Followers NullableInt32 `json:"followers,omitempty"`
	Following NullableInt32 `json:"following,omitempty"`
	Scores *Scores `json:"scores,omitempty"`
}

type _PackageContributorData PackageContributorData

// NewPackageContributorData instantiates a new PackageContributorData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackageContributorData(id string) *PackageContributorData {
	this := PackageContributorData{}
	this.Id = id
	var scores Scores = {}
	this.Scores = &scores
	return &this
}

// NewPackageContributorDataWithDefaults instantiates a new PackageContributorData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackageContributorDataWithDefaults() *PackageContributorData {
	this := PackageContributorData{}
	var scores Scores = {}
	this.Scores = &scores
	return &this
}

// GetId returns the Id field value
func (o *PackageContributorData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PackageContributorData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PackageContributorData) SetId(v string) {
	o.Id = v
}

// GetAuthor returns the Author field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetAuthor() string {
	if o == nil || IsNil(o.Author.Get()) {
		var ret string
		return ret
	}
	return *o.Author.Get()
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetAuthorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Author.Get(), o.Author.IsSet()
}

// HasAuthor returns a boolean if a field has been set.
func (o *PackageContributorData) HasAuthor() bool {
	if o != nil && o.Author.IsSet() {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given NullableString and assigns it to the Author field.
func (o *PackageContributorData) SetAuthor(v string) {
	o.Author.Set(&v)
}
// SetAuthorNil sets the value for Author to be an explicit nil
func (o *PackageContributorData) SetAuthorNil() {
	o.Author.Set(nil)
}

// UnsetAuthor ensures that no value is present for Author, not even an explicit nil
func (o *PackageContributorData) UnsetAuthor() {
	o.Author.Unset()
}

// GetAuthorEmail returns the AuthorEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetAuthorEmail() string {
	if o == nil || IsNil(o.AuthorEmail.Get()) {
		var ret string
		return ret
	}
	return *o.AuthorEmail.Get()
}

// GetAuthorEmailOk returns a tuple with the AuthorEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetAuthorEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthorEmail.Get(), o.AuthorEmail.IsSet()
}

// HasAuthorEmail returns a boolean if a field has been set.
func (o *PackageContributorData) HasAuthorEmail() bool {
	if o != nil && o.AuthorEmail.IsSet() {
		return true
	}

	return false
}

// SetAuthorEmail gets a reference to the given NullableString and assigns it to the AuthorEmail field.
func (o *PackageContributorData) SetAuthorEmail(v string) {
	o.AuthorEmail.Set(&v)
}
// SetAuthorEmailNil sets the value for AuthorEmail to be an explicit nil
func (o *PackageContributorData) SetAuthorEmailNil() {
	o.AuthorEmail.Set(nil)
}

// UnsetAuthorEmail ensures that no value is present for AuthorEmail, not even an explicit nil
func (o *PackageContributorData) UnsetAuthorEmail() {
	o.AuthorEmail.Unset()
}

// GetLogin returns the Login field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetLogin() string {
	if o == nil || IsNil(o.Login.Get()) {
		var ret string
		return ret
	}
	return *o.Login.Get()
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Login.Get(), o.Login.IsSet()
}

// HasLogin returns a boolean if a field has been set.
func (o *PackageContributorData) HasLogin() bool {
	if o != nil && o.Login.IsSet() {
		return true
	}

	return false
}

// SetLogin gets a reference to the given NullableString and assigns it to the Login field.
func (o *PackageContributorData) SetLogin(v string) {
	o.Login.Set(&v)
}
// SetLoginNil sets the value for Login to be an explicit nil
func (o *PackageContributorData) SetLoginNil() {
	o.Login.Set(nil)
}

// UnsetLogin ensures that no value is present for Login, not even an explicit nil
func (o *PackageContributorData) UnsetLogin() {
	o.Login.Unset()
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AvatarUrl.Get()
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetAvatarUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvatarUrl.Get(), o.AvatarUrl.IsSet()
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *PackageContributorData) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl.IsSet() {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given NullableString and assigns it to the AvatarUrl field.
func (o *PackageContributorData) SetAvatarUrl(v string) {
	o.AvatarUrl.Set(&v)
}
// SetAvatarUrlNil sets the value for AvatarUrl to be an explicit nil
func (o *PackageContributorData) SetAvatarUrlNil() {
	o.AvatarUrl.Set(nil)
}

// UnsetAvatarUrl ensures that no value is present for AvatarUrl, not even an explicit nil
func (o *PackageContributorData) UnsetAvatarUrl() {
	o.AvatarUrl.Unset()
}

// GetGravatarId returns the GravatarId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetGravatarId() string {
	if o == nil || IsNil(o.GravatarId.Get()) {
		var ret string
		return ret
	}
	return *o.GravatarId.Get()
}

// GetGravatarIdOk returns a tuple with the GravatarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetGravatarIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GravatarId.Get(), o.GravatarId.IsSet()
}

// HasGravatarId returns a boolean if a field has been set.
func (o *PackageContributorData) HasGravatarId() bool {
	if o != nil && o.GravatarId.IsSet() {
		return true
	}

	return false
}

// SetGravatarId gets a reference to the given NullableString and assigns it to the GravatarId field.
func (o *PackageContributorData) SetGravatarId(v string) {
	o.GravatarId.Set(&v)
}
// SetGravatarIdNil sets the value for GravatarId to be an explicit nil
func (o *PackageContributorData) SetGravatarIdNil() {
	o.GravatarId.Set(nil)
}

// UnsetGravatarId ensures that no value is present for GravatarId, not even an explicit nil
func (o *PackageContributorData) UnsetGravatarId() {
	o.GravatarId.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *PackageContributorData) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *PackageContributorData) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *PackageContributorData) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *PackageContributorData) UnsetUrl() {
	o.Url.Unset()
}

// GetHtmlUrl returns the HtmlUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetHtmlUrl() string {
	if o == nil || IsNil(o.HtmlUrl.Get()) {
		var ret string
		return ret
	}
	return *o.HtmlUrl.Get()
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtmlUrl.Get(), o.HtmlUrl.IsSet()
}

// HasHtmlUrl returns a boolean if a field has been set.
func (o *PackageContributorData) HasHtmlUrl() bool {
	if o != nil && o.HtmlUrl.IsSet() {
		return true
	}

	return false
}

// SetHtmlUrl gets a reference to the given NullableString and assigns it to the HtmlUrl field.
func (o *PackageContributorData) SetHtmlUrl(v string) {
	o.HtmlUrl.Set(&v)
}
// SetHtmlUrlNil sets the value for HtmlUrl to be an explicit nil
func (o *PackageContributorData) SetHtmlUrlNil() {
	o.HtmlUrl.Set(nil)
}

// UnsetHtmlUrl ensures that no value is present for HtmlUrl, not even an explicit nil
func (o *PackageContributorData) UnsetHtmlUrl() {
	o.HtmlUrl.Unset()
}

// GetCompany returns the Company field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetCompany() string {
	if o == nil || IsNil(o.Company.Get()) {
		var ret string
		return ret
	}
	return *o.Company.Get()
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Company.Get(), o.Company.IsSet()
}

// HasCompany returns a boolean if a field has been set.
func (o *PackageContributorData) HasCompany() bool {
	if o != nil && o.Company.IsSet() {
		return true
	}

	return false
}

// SetCompany gets a reference to the given NullableString and assigns it to the Company field.
func (o *PackageContributorData) SetCompany(v string) {
	o.Company.Set(&v)
}
// SetCompanyNil sets the value for Company to be an explicit nil
func (o *PackageContributorData) SetCompanyNil() {
	o.Company.Set(nil)
}

// UnsetCompany ensures that no value is present for Company, not even an explicit nil
func (o *PackageContributorData) UnsetCompany() {
	o.Company.Unset()
}

// GetBlog returns the Blog field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetBlog() string {
	if o == nil || IsNil(o.Blog.Get()) {
		var ret string
		return ret
	}
	return *o.Blog.Get()
}

// GetBlogOk returns a tuple with the Blog field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetBlogOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Blog.Get(), o.Blog.IsSet()
}

// HasBlog returns a boolean if a field has been set.
func (o *PackageContributorData) HasBlog() bool {
	if o != nil && o.Blog.IsSet() {
		return true
	}

	return false
}

// SetBlog gets a reference to the given NullableString and assigns it to the Blog field.
func (o *PackageContributorData) SetBlog(v string) {
	o.Blog.Set(&v)
}
// SetBlogNil sets the value for Blog to be an explicit nil
func (o *PackageContributorData) SetBlogNil() {
	o.Blog.Set(nil)
}

// UnsetBlog ensures that no value is present for Blog, not even an explicit nil
func (o *PackageContributorData) UnsetBlog() {
	o.Blog.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetLocation() string {
	if o == nil || IsNil(o.Location.Get()) {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *PackageContributorData) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *PackageContributorData) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *PackageContributorData) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *PackageContributorData) UnsetLocation() {
	o.Location.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *PackageContributorData) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *PackageContributorData) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *PackageContributorData) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *PackageContributorData) UnsetEmail() {
	o.Email.Unset()
}

// GetHireable returns the Hireable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetHireable() bool {
	if o == nil || IsNil(o.Hireable.Get()) {
		var ret bool
		return ret
	}
	return *o.Hireable.Get()
}

// GetHireableOk returns a tuple with the Hireable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetHireableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hireable.Get(), o.Hireable.IsSet()
}

// HasHireable returns a boolean if a field has been set.
func (o *PackageContributorData) HasHireable() bool {
	if o != nil && o.Hireable.IsSet() {
		return true
	}

	return false
}

// SetHireable gets a reference to the given NullableBool and assigns it to the Hireable field.
func (o *PackageContributorData) SetHireable(v bool) {
	o.Hireable.Set(&v)
}
// SetHireableNil sets the value for Hireable to be an explicit nil
func (o *PackageContributorData) SetHireableNil() {
	o.Hireable.Set(nil)
}

// UnsetHireable ensures that no value is present for Hireable, not even an explicit nil
func (o *PackageContributorData) UnsetHireable() {
	o.Hireable.Unset()
}

// GetTwitterUsername returns the TwitterUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetTwitterUsername() string {
	if o == nil || IsNil(o.TwitterUsername.Get()) {
		var ret string
		return ret
	}
	return *o.TwitterUsername.Get()
}

// GetTwitterUsernameOk returns a tuple with the TwitterUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetTwitterUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterUsername.Get(), o.TwitterUsername.IsSet()
}

// HasTwitterUsername returns a boolean if a field has been set.
func (o *PackageContributorData) HasTwitterUsername() bool {
	if o != nil && o.TwitterUsername.IsSet() {
		return true
	}

	return false
}

// SetTwitterUsername gets a reference to the given NullableString and assigns it to the TwitterUsername field.
func (o *PackageContributorData) SetTwitterUsername(v string) {
	o.TwitterUsername.Set(&v)
}
// SetTwitterUsernameNil sets the value for TwitterUsername to be an explicit nil
func (o *PackageContributorData) SetTwitterUsernameNil() {
	o.TwitterUsername.Set(nil)
}

// UnsetTwitterUsername ensures that no value is present for TwitterUsername, not even an explicit nil
func (o *PackageContributorData) UnsetTwitterUsername() {
	o.TwitterUsername.Unset()
}

// GetPublicRepos returns the PublicRepos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetPublicRepos() int32 {
	if o == nil || IsNil(o.PublicRepos.Get()) {
		var ret int32
		return ret
	}
	return *o.PublicRepos.Get()
}

// GetPublicReposOk returns a tuple with the PublicRepos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetPublicReposOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicRepos.Get(), o.PublicRepos.IsSet()
}

// HasPublicRepos returns a boolean if a field has been set.
func (o *PackageContributorData) HasPublicRepos() bool {
	if o != nil && o.PublicRepos.IsSet() {
		return true
	}

	return false
}

// SetPublicRepos gets a reference to the given NullableInt32 and assigns it to the PublicRepos field.
func (o *PackageContributorData) SetPublicRepos(v int32) {
	o.PublicRepos.Set(&v)
}
// SetPublicReposNil sets the value for PublicRepos to be an explicit nil
func (o *PackageContributorData) SetPublicReposNil() {
	o.PublicRepos.Set(nil)
}

// UnsetPublicRepos ensures that no value is present for PublicRepos, not even an explicit nil
func (o *PackageContributorData) UnsetPublicRepos() {
	o.PublicRepos.Unset()
}

// GetPublicGists returns the PublicGists field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetPublicGists() int32 {
	if o == nil || IsNil(o.PublicGists.Get()) {
		var ret int32
		return ret
	}
	return *o.PublicGists.Get()
}

// GetPublicGistsOk returns a tuple with the PublicGists field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetPublicGistsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicGists.Get(), o.PublicGists.IsSet()
}

// HasPublicGists returns a boolean if a field has been set.
func (o *PackageContributorData) HasPublicGists() bool {
	if o != nil && o.PublicGists.IsSet() {
		return true
	}

	return false
}

// SetPublicGists gets a reference to the given NullableInt32 and assigns it to the PublicGists field.
func (o *PackageContributorData) SetPublicGists(v int32) {
	o.PublicGists.Set(&v)
}
// SetPublicGistsNil sets the value for PublicGists to be an explicit nil
func (o *PackageContributorData) SetPublicGistsNil() {
	o.PublicGists.Set(nil)
}

// UnsetPublicGists ensures that no value is present for PublicGists, not even an explicit nil
func (o *PackageContributorData) UnsetPublicGists() {
	o.PublicGists.Unset()
}

// GetFollowers returns the Followers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetFollowers() int32 {
	if o == nil || IsNil(o.Followers.Get()) {
		var ret int32
		return ret
	}
	return *o.Followers.Get()
}

// GetFollowersOk returns a tuple with the Followers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetFollowersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Followers.Get(), o.Followers.IsSet()
}

// HasFollowers returns a boolean if a field has been set.
func (o *PackageContributorData) HasFollowers() bool {
	if o != nil && o.Followers.IsSet() {
		return true
	}

	return false
}

// SetFollowers gets a reference to the given NullableInt32 and assigns it to the Followers field.
func (o *PackageContributorData) SetFollowers(v int32) {
	o.Followers.Set(&v)
}
// SetFollowersNil sets the value for Followers to be an explicit nil
func (o *PackageContributorData) SetFollowersNil() {
	o.Followers.Set(nil)
}

// UnsetFollowers ensures that no value is present for Followers, not even an explicit nil
func (o *PackageContributorData) UnsetFollowers() {
	o.Followers.Unset()
}

// GetFollowing returns the Following field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PackageContributorData) GetFollowing() int32 {
	if o == nil || IsNil(o.Following.Get()) {
		var ret int32
		return ret
	}
	return *o.Following.Get()
}

// GetFollowingOk returns a tuple with the Following field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PackageContributorData) GetFollowingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Following.Get(), o.Following.IsSet()
}

// HasFollowing returns a boolean if a field has been set.
func (o *PackageContributorData) HasFollowing() bool {
	if o != nil && o.Following.IsSet() {
		return true
	}

	return false
}

// SetFollowing gets a reference to the given NullableInt32 and assigns it to the Following field.
func (o *PackageContributorData) SetFollowing(v int32) {
	o.Following.Set(&v)
}
// SetFollowingNil sets the value for Following to be an explicit nil
func (o *PackageContributorData) SetFollowingNil() {
	o.Following.Set(nil)
}

// UnsetFollowing ensures that no value is present for Following, not even an explicit nil
func (o *PackageContributorData) UnsetFollowing() {
	o.Following.Unset()
}

// GetScores returns the Scores field value if set, zero value otherwise.
func (o *PackageContributorData) GetScores() Scores {
	if o == nil || IsNil(o.Scores) {
		var ret Scores
		return ret
	}
	return *o.Scores
}

// GetScoresOk returns a tuple with the Scores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PackageContributorData) GetScoresOk() (*Scores, bool) {
	if o == nil || IsNil(o.Scores) {
		return nil, false
	}
	return o.Scores, true
}

// HasScores returns a boolean if a field has been set.
func (o *PackageContributorData) HasScores() bool {
	if o != nil && !IsNil(o.Scores) {
		return true
	}

	return false
}

// SetScores gets a reference to the given Scores and assigns it to the Scores field.
func (o *PackageContributorData) SetScores(v Scores) {
	o.Scores = &v
}

func (o PackageContributorData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PackageContributorData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Author.IsSet() {
		toSerialize["author"] = o.Author.Get()
	}
	if o.AuthorEmail.IsSet() {
		toSerialize["author_email"] = o.AuthorEmail.Get()
	}
	if o.Login.IsSet() {
		toSerialize["login"] = o.Login.Get()
	}
	if o.AvatarUrl.IsSet() {
		toSerialize["avatar_url"] = o.AvatarUrl.Get()
	}
	if o.GravatarId.IsSet() {
		toSerialize["gravatar_id"] = o.GravatarId.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.HtmlUrl.IsSet() {
		toSerialize["html_url"] = o.HtmlUrl.Get()
	}
	if o.Company.IsSet() {
		toSerialize["company"] = o.Company.Get()
	}
	if o.Blog.IsSet() {
		toSerialize["blog"] = o.Blog.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.Hireable.IsSet() {
		toSerialize["hireable"] = o.Hireable.Get()
	}
	if o.TwitterUsername.IsSet() {
		toSerialize["twitter_username"] = o.TwitterUsername.Get()
	}
	if o.PublicRepos.IsSet() {
		toSerialize["public_repos"] = o.PublicRepos.Get()
	}
	if o.PublicGists.IsSet() {
		toSerialize["public_gists"] = o.PublicGists.Get()
	}
	if o.Followers.IsSet() {
		toSerialize["followers"] = o.Followers.Get()
	}
	if o.Following.IsSet() {
		toSerialize["following"] = o.Following.Get()
	}
	if !IsNil(o.Scores) {
		toSerialize["scores"] = o.Scores
	}
	return toSerialize, nil
}

func (o *PackageContributorData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPackageContributorData := _PackageContributorData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPackageContributorData)

	if err != nil {
		return err
	}

	*o = PackageContributorData(varPackageContributorData)

	return err
}

type NullablePackageContributorData struct {
	value *PackageContributorData
	isSet bool
}

func (v NullablePackageContributorData) Get() *PackageContributorData {
	return v.value
}

func (v *NullablePackageContributorData) Set(val *PackageContributorData) {
	v.value = val
	v.isSet = true
}

func (v NullablePackageContributorData) IsSet() bool {
	return v.isSet
}

func (v *NullablePackageContributorData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackageContributorData(val *PackageContributorData) *NullablePackageContributorData {
	return &NullablePackageContributorData{value: val, isSet: true}
}

func (v NullablePackageContributorData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackageContributorData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


