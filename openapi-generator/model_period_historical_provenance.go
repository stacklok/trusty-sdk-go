/*
Trusty API

Trusty API

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PeriodHistoricalProvenance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PeriodHistoricalProvenance{}

// PeriodHistoricalProvenance struct for PeriodHistoricalProvenance
type PeriodHistoricalProvenance struct {
	Tags *int32 `json:"tags,omitempty"`
	Vers *int32 `json:"vers,omitempty"`
	Matches *int32 `json:"matches,omitempty"`
}

// NewPeriodHistoricalProvenance instantiates a new PeriodHistoricalProvenance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeriodHistoricalProvenance() *PeriodHistoricalProvenance {
	this := PeriodHistoricalProvenance{}
	var tags int32 = 0
	this.Tags = &tags
	var vers int32 = 0
	this.Vers = &vers
	var matches int32 = 0
	this.Matches = &matches
	return &this
}

// NewPeriodHistoricalProvenanceWithDefaults instantiates a new PeriodHistoricalProvenance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeriodHistoricalProvenanceWithDefaults() *PeriodHistoricalProvenance {
	this := PeriodHistoricalProvenance{}
	var tags int32 = 0
	this.Tags = &tags
	var vers int32 = 0
	this.Vers = &vers
	var matches int32 = 0
	this.Matches = &matches
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PeriodHistoricalProvenance) GetTags() int32 {
	if o == nil || IsNil(o.Tags) {
		var ret int32
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodHistoricalProvenance) GetTagsOk() (*int32, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PeriodHistoricalProvenance) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given int32 and assigns it to the Tags field.
func (o *PeriodHistoricalProvenance) SetTags(v int32) {
	o.Tags = &v
}

// GetVers returns the Vers field value if set, zero value otherwise.
func (o *PeriodHistoricalProvenance) GetVers() int32 {
	if o == nil || IsNil(o.Vers) {
		var ret int32
		return ret
	}
	return *o.Vers
}

// GetVersOk returns a tuple with the Vers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodHistoricalProvenance) GetVersOk() (*int32, bool) {
	if o == nil || IsNil(o.Vers) {
		return nil, false
	}
	return o.Vers, true
}

// HasVers returns a boolean if a field has been set.
func (o *PeriodHistoricalProvenance) HasVers() bool {
	if o != nil && !IsNil(o.Vers) {
		return true
	}

	return false
}

// SetVers gets a reference to the given int32 and assigns it to the Vers field.
func (o *PeriodHistoricalProvenance) SetVers(v int32) {
	o.Vers = &v
}

// GetMatches returns the Matches field value if set, zero value otherwise.
func (o *PeriodHistoricalProvenance) GetMatches() int32 {
	if o == nil || IsNil(o.Matches) {
		var ret int32
		return ret
	}
	return *o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeriodHistoricalProvenance) GetMatchesOk() (*int32, bool) {
	if o == nil || IsNil(o.Matches) {
		return nil, false
	}
	return o.Matches, true
}

// HasMatches returns a boolean if a field has been set.
func (o *PeriodHistoricalProvenance) HasMatches() bool {
	if o != nil && !IsNil(o.Matches) {
		return true
	}

	return false
}

// SetMatches gets a reference to the given int32 and assigns it to the Matches field.
func (o *PeriodHistoricalProvenance) SetMatches(v int32) {
	o.Matches = &v
}

func (o PeriodHistoricalProvenance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PeriodHistoricalProvenance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Vers) {
		toSerialize["vers"] = o.Vers
	}
	if !IsNil(o.Matches) {
		toSerialize["matches"] = o.Matches
	}
	return toSerialize, nil
}

type NullablePeriodHistoricalProvenance struct {
	value *PeriodHistoricalProvenance
	isSet bool
}

func (v NullablePeriodHistoricalProvenance) Get() *PeriodHistoricalProvenance {
	return v.value
}

func (v *NullablePeriodHistoricalProvenance) Set(val *PeriodHistoricalProvenance) {
	v.value = val
	v.isSet = true
}

func (v NullablePeriodHistoricalProvenance) IsSet() bool {
	return v.isSet
}

func (v *NullablePeriodHistoricalProvenance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeriodHistoricalProvenance(val *PeriodHistoricalProvenance) *NullablePeriodHistoricalProvenance {
	return &NullablePeriodHistoricalProvenance{value: val, isSet: true}
}

func (v NullablePeriodHistoricalProvenance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeriodHistoricalProvenance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


